learning queries in mongodb, 
db.name of collection.update/find/delete.


test> show dbs
admin         40.00 KiB
config        84.00 KiB
local         40.00 KiB
natours-test  40.00 KiB
test> ust natours-test
Uncaught:
SyntaxError: Missing semicolon. (1:3)

> 1 | ust natours-test
    |    ^
  2 |

test> use = natours-test
switched to db =
=> use natours-test
switched to db natours-test
natours-test> db.tours.insertMany([{ name: "The Sea Exploerer", price: 497, rating: 4.8}, {name: "The Snow Adventurer", price: 997, rating: 4.9, difficulty: "easy" }])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("64460602692de8a11644d9a4"),
    '1': ObjectId("64460602692de8a11644d9a5")
  }
}
natours-test> db.tours.find()
[
  {
    _id: ObjectId("6446016836ff82ca6bf6b7b9"),
    name: 'The Forest Hiker',
    price: 297,
    rating: 4.7
  },
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  },
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 997,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find()
[
  {
    _id: ObjectId("6446016836ff82ca6bf6b7b9"),
    name: 'The Forest Hiker',
    price: 297,
    rating: 4.7
  },
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  },
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 997,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find({ name: "The Forest Hiker" })
[
  {
    _id: ObjectId("6446016836ff82ca6bf6b7b9"),
    name: 'The Forest Hiker',
    price: 297,
    rating: 4.7
  }
]
natours-test> db.tours.find({ difficulty: 'easy' })
[
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 997,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find({ price: {$lte: 500} })
[
  {
    _id: ObjectId("6446016836ff82ca6bf6b7b9"),
    name: 'The Forest Hiker',
    price: 297,
    rating: 4.7
  },
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  }
]
natours-test> db.tours.find({ price: {$lte: 500}, rating: {$gte: 4.8 })
Uncaught:
SyntaxError: Unexpected token, expected "," (1:56)

> 1 | db.tours.find({ price: {$lte: 500}, rating: {$gte: 4.8 })
    |                                                         ^
  2 |

natours-test> db.tours.find({ price: {$lte: 500}, rating: {$gte: 4.8} })
[
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  }
]
natours-test> db.tours.find({ $or: [{ price: {$lte: 500}}, {rating: {$gte: 4.8}} ] })
[
  {
    _id: ObjectId("6446016836ff82ca6bf6b7b9"),
    name: 'The Forest Hiker',
    price: 297,
    rating: 4.7
  },
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  },
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 997,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find({ $and: [{ price: {$lte: 500}}, {rating: {$gte: 4.8}} ] })
[
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  }
]
natours-test> db.tours.find({ $or: [{ price: {$gt: 500}}, {rating: {$gte: 4.8}} ] })
[
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  },
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 997,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.updateOne({name: "The Snow Adventurer"}, {$set: {price: 597} })
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
natours-test> db.tours.find({name: "The Snow Adventurer"})
[
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 597,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find({price: {$gt: 500}, rating:{gt: 4.8}})

natours-test>

natours-test> db.tours.find({$or: [{price: {$gt: 500}}, {rating:{gt: 4.8}}]})
[
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 597,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find({ $or: [{ price: {$gt: 500}}, {rating: {$gte: 4.8}} ] })
[
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  },
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 597,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.find({price: {$gt: 500}}, rating:{gt: 4.8})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:41)

> 1 | db.tours.find({price: {$gt: 500}}, rating:{gt: 4.8})
    |                                          ^
  2 |

natours-test> db.tours.find({price: {$gt: 500}, rating:{gt: 4.8})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:50)

> 1 | db.tours.find({price: {$gt: 500}, rating:{gt: 4.8})
    |                                                   ^
  2 |

natours-test> db.tours.find({price: {$gt: 500}, rating:{gte: 4.8})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:51)

> 1 | db.tours.find({price: {$gt: 500}, rating:{gte: 4.8})
    |                                                    ^
  2 |

natours-test> db.tours.find({price: {$gt: 500}, rating:{$gte: 4.8})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:52)

> 1 | db.tours.find({price: {$gt: 500}, rating:{$gte: 4.8})
    |                                                     ^
  2 |

natours-test> db.tours.find({price: {$gt: 500}, rating: {$gte: 4.8}})
[
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 597,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.updateMany({price: {gt: 500}, rating: {gte: 4.8} }, { $set {premium: true}})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:68)

> 1 | db.tours.updateMany({price: {gt: 500}, rating: {gte: 4.8} }, { $set {premium: true}})
    |                                                                     ^
  2 |

natours-test> db.tours.updateMany({price: {gt: 500}, rating: {gte: 4.8} }, { $set: {premium: true}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
natours-test> db.tours.find()
[
  {
    _id: ObjectId("6446016836ff82ca6bf6b7b9"),
    name: 'The Forest Hiker',
    price: 297,
    rating: 4.7
  },
  {
    _id: ObjectId("64460602692de8a11644d9a4"),
    name: 'The Sea Exploerer',
    price: 497,
    rating: 4.8
  },
  {
    _id: ObjectId("64460602692de8a11644d9a5"),
    name: 'The Snow Adventurer',
    price: 597,
    rating: 4.9,
    difficulty: 'easy'
  }
]
natours-test> db.tours.deleteMany({ rating: {$lt: 4.8} })
{ acknowledged: true, deletedCount: 1 }
natours-test>

all commands i used using mongodb for education 

can also use delete many not recommended but possible.

lt is less than

gt is greater than